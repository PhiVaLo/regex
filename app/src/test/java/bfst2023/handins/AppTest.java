/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bfst2023.handins;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import bfst2023.handins.model.Address;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
    @Test void simple() {
        var addr = Address.parse("Finsensvej 50, 2000 Frederiksberg");
        assertEquals("Finsensvej", addr.street);
        assertEquals("50", addr.house);
        assertEquals("2000", addr.postcode);
        assertEquals("Frederiksberg", addr.city);
    }
    
    // TODO
    @Test void address1() {
        var addr = Address.parse("Bjerggården 16, st. th, 2635 Ishøj");
        assertEquals("Bjerggården", addr.street);
        assertEquals("16", addr.house);
        assertEquals("st.", addr.floor);
        assertEquals("th", addr.side);
        assertEquals("2635", addr.postcode);
        assertEquals("Ishøj", addr.city);
    }
    @Test void address2() {
        var addr = Address.parse("Ågården 26, 2. tv, 2635 Ishøj");
        assertEquals("Ågården", addr.street);
        assertEquals("26", addr.house);
        assertEquals("2.", addr.floor);
        assertEquals("tv", addr.side);
        assertEquals("2635", addr.postcode);
        assertEquals("Ishøj", addr.city);
    }
    @Test void address3() {
        var addr = Address.parse("Østergården 3, 1. mf, 2635 Ishøj");
        assertEquals("Østergården", addr.street);
        assertEquals("3", addr.house);
        assertEquals("1.", addr.floor);
        assertEquals("mf", addr.side);
        assertEquals("2635", addr.postcode);
        assertEquals("Ishøj", addr.city);
    }
    @Test void address4() {
        var addr = Address.parse("H.C. Andersens Boulevard 34, 1. th, 1553 København V");
        assertEquals("H.C. Andersens Boulevard", addr.street);
        assertEquals("34", addr.house);
        assertEquals("1.", addr.floor);
        assertEquals("th", addr.side);
        assertEquals("1553", addr.postcode);
        assertEquals("København V", addr.city);
    }
    @Test void address5() {
        var addr = Address.parse("Øresundsvej 128, 1. 8, 2300 København S");
        assertEquals("Øresundsvej", addr.street);
        assertEquals("128", addr.house);
        assertEquals("1.", addr.floor);
        assertEquals("8", addr.side);
        assertEquals("2300", addr.postcode);
        assertEquals("København S", addr.city);
    }
    @Test void address6() {
        var addr = Address.parse("Nygårdsvænget 34, st. a19, 2800 Kongens Lyngby");
        assertEquals("Nygårdsvænget", addr.street);
        assertEquals("34", addr.house);
        assertEquals("st.", addr.floor);
        assertEquals("a19", addr.side);
        assertEquals("2800", addr.postcode);
        assertEquals("Kongens Lyngby", addr.city);
    }
    @Test void address7() {
        var addr = Address.parse("Tophøjvej 2B, Brøndum, 9500 Hobro");
        assertEquals("Tophøjvej", addr.street);
        assertEquals("2B", addr.house);
        assertEquals(null, addr.floor);
        assertEquals(null, addr.side);
        assertEquals("9500", addr.postcode);
        assertEquals("Hobro", addr.city);
    }
    @Test void address8() {
        var addr = Address.parse("Gl. Landevej 34A, Roskilde By, 4000 Roskilde");
        assertEquals("Gl. Landevej", addr.street);
        assertEquals("34A", addr.house);
        assertEquals(null, addr.floor);
        assertEquals(null, addr.side);
        assertEquals("4000", addr.postcode);
        assertEquals("Roskilde", addr.city);
    }
    @Test void address9() {
        var addr = Address.parse("Vigerslev Allé 158P, Hf. Danshøj, 2500 Valby");
        assertEquals("Vigerslev Allé", addr.street);
        assertEquals("158P", addr.house);
        assertEquals(null, addr.floor);
        assertEquals(null, addr.side);
        assertEquals("2500", addr.postcode);
        assertEquals("Valby", addr.city);
    }
    @Test void address10() {
        var addr = Address.parse("Rued Langgaards Vej 7, 2300 København S");
        assertEquals("Rued Langgaards Vej", addr.street);
        assertEquals("7", addr.house);
        assertEquals(null, addr.floor);
        assertEquals(null, addr.side);
        assertEquals("2300", addr.postcode);
        assertEquals("København S", addr.city);
    }
    @Test void address11() {
        var addr = Address.parse("10. Februar Vej 2, 6070 Christiansfeld");
        assertEquals("10. Februar Vej", addr.street);
        assertEquals("2", addr.house);
        assertEquals(null, addr.floor);
        assertEquals(null, addr.side);
        assertEquals("6070", addr.postcode);
        assertEquals("Christiansfeld", addr.city);
    }

}
